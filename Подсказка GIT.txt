С самого начала надо создать репозиторий, для этого
 cd D:/FrontEnd/projects/ing-mishka входим в папку
git init создаем (инициализируем) пустой репозиторий локально
ls -1 -a смотрим список файлов, видим, что появился файл .git



План действий:
Пулреквестом предлагаем новые изменения, после того, как сделали там работу- подсказка 1
Обновления мастрера, после принятия пул реквеста (новый Task)- подсказка 4
Каждое новое задание начинаем с создания нового бранча в котором и делаем задание- подсказка 1

Shift+Alt+F автоматическое выравнивание в VS code


GIT:
pwd (показать папку, в которой сейчас находишься)
ls (показывает список файлов и папок)

cd открыть папку
Перед тем, как закомитить (сохранить) надо файл или всю папку проиндексировать:
git add. (вся папка)
git add имяфайла (один файл)
git status (показывает зеленым какой  файл попал в индексацию и будет закомиттен)
git commit -m "Комментарий к сохранению"  (сохраняем файлы)
git status (для проверки того, что все закоммитено)

Теперь изменяем что то в файле
git status (покажет, что есть изменения и не подготовленны к коммиту
git diff (показывает что именно поменялось (меняли цвета кнопок)
git add css/main.css css/button.css (сохраняем сразу 2 файла, которые указываются через пробел)
git status (проверяем изменения)
git commit -m "Поменяли цвета кнопок" (сохранили файл с пометкой)

git log (показывает историю коммитов)
git show a23424j2k435k34k5 (показывает изменения в этом хэше)

Конфликт:
git status
git merge page
Правим файл, оставляем нужное
git add имяфайла
git commit -m "Оставили нужное"

git log --oneline --graph -6 (проверяем все ли получилось)

git checkout master- переход в главный ствол
git checkout lesson_1 прыгвем в ветку Lesson_1
git checkout -b Lesson_2


Откатить изменения, а так же восстановить файл, если удален: 
git checkout имяфайла

Отдельно сохраняем 2 файла
git reset HEAD имя фазла, которое не хотим включать в коммит
git status
git commit -m "Что то изменили"
git status
git add второй фац
git commit -m "Что то изменили во втором файле"
git status
log

Ошибка в комментарии
git log -1 (показывает предыдущий коммит)
git commit --amend -m "Коммент с исправленной ошибкой" (позволяет изменить последний коммит
git log -1

git checkout task# переходим на бранч task#


показать путь к проекту на гитхабе
 git remote add motocycle git@github.com:Ingemar86/ing-mishka.git
git remote add QA https://github.com/Ingemar86/QA.git
переход в бранч мастера
git checkout master
перейти в branch1
git checkout branch1
Создаем ветку-переходим в ветку  локальнона компе
git checkout -b "название"
отправляем созданный бранч в удаленку
git push -u motocycle branch1


Инициализация npm проекта (созлание package.json)
npm init

удалить папку
rm -rf node_modules/

инсталлируем
npm install


gulp sass:watch

